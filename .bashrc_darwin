#-- shell setup
export PS1='\[\e[0;32m\]\u\[\e[0;35m\]@\[\e[0;32m\]\h\[\e[1;34m\]:\w\[\e[1;33m\] > \[\e[0m\]'
export EDITOR="$HOME/Applications/Emacs.app/Contents/MacOS/bin/emacsclient"
export ARCHFLAGS='-arch x86_64'


#-- aliases
# quicklook from the shell
alias ql="qlmanage -p 2>/dev/null"

alias ls="ls -G"

alias ec="~/Applications/Emacs.app/Contents/MacOS/bin/emacsclient -n"
alias etags="~/Applications/Emacs.app/Contents/MacOS/bin/etags"

alias mvim="mvim --remote-silent"
alias mbznc="autossh -2 -fN -M 20000 mbznc"


#-- functions

# pdf verison of man pages
pman () { man -t $* | ps2pdf - - | open -g -f -a /Applications/Preview.app ; }

# setup development environment for milkbox
mbdev () {
	export PYTHONPATH=$HOME/src/website:$HOME/src/website/milkbox
	export DJANGO_SETTINGS_MODULE=milkbox.localsettings
}

buildnotes () {
    if [ -x /Volumes/USERS/FACULTY/DCurtis ] ; then
        multimarkdown $1 -o /Volumes/USERS/FACULTY/DCurtis/${1/%.md/.html}
    fi
}


# setup development for research
uihcdev () {
	export PATH=$PATH:$HOME/Development/compepi/wescrub/contactgraph:$HOME/Development/compepi/uihc/scripts:$HOME/Development/compepi/uihc/virtualenv
}

## the following allows the terminal to resolve mac aliases.
## it seems better to just use linux aliases though, then you get completion.
function resolvealias {
    echo $(osascript << EOS
tell application "Finder"
set theItem to (POSIX file "${1}") as alias
if the kind of theItem is "alias" then
get the posix path of ((original item of theItem) as text)
end if
end tell
EOS
)
}

function ocd {
    if [ ${#1} == 0 ]; then
	builtin cd
    elif [[ -d "${1}" || -L "${1}" ]]; then
	builtin cd "${1}"
    elif [[ -f "${1}" ]]; then
	path=$(resolvealias "$1")
	if [[ -z $path ]]; then
	    builtin cd "${1}"
	else
	    builtin cd "${path}"
	fi
    else
	builtin cd "${1}"
    fi
}


## enable virtualenvwrapper
# export VIRTUAL_ENV_DISABLE_PROMPT=1
# export WORKON_HOME=$HOME/.virtualenvs
# if [ -z "$VIRTUALENVWRAPPER_PYTHON" ]
# then
#     source /usr/local/bin/virtualenvwrapper.sh
# fi
# workon default

source $HOME/.virtualenv/bin/activate

# ## pip
# export PIP_RESPECT_VIRTUALENV=true
# export PIP_VIRTUALENV_BASE=$WORKON_HOME

# # pip bash completion start
# _pip_completion()
# {
#     COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
#                    COMP_CWORD=$COMP_CWORD \
#                    PIP_AUTO_COMPLETE=1 $1 ) )
# }
# complete -o default -F _pip_completion pip

## use default environment


## enable rvm
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# enable bash completion
[[ -f `which brew` ]] && [[ -f `brew --prefix`/etc/bash_completion ]] &&  source `brew --prefix`/etc/bash_completion

